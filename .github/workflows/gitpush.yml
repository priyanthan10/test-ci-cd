name: Build, Push, and Deploy to ECS

on: 
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Push, and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Step 3: Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build, tag, and push the Docker image to Amazon ECR
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: static-html-apache
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 5: Create ECS Cluster
      - name: Create ECS Cluster
        run: |
          aws ecs create-cluster --cluster-name apache-web-cluster --region ap-south-1

      # Step 6: Register ECS Task Definition
      - name: Register ECS Task Definition
        run: |
          aws ecs register-task-definition \
            --family static-html-task \
            --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole \
            --network-mode awsvpc \
            --container-definitions '[{
                "name": "apache-container",
                "image": "${{ steps.login-ecr.outputs.registry }}/static-html-apache:latest",
                "memory": 512,
                "cpu": 256,
                "essential": true,
                "portMappings": [{"containerPort": 80, "hostPort": 80, "protocol": "tcp"}]
            }]' \
            --requires-compatibilities FARGATE \
            --cpu 256 \
            --memory 512 \
            --region ap-south-1

      # Step 7: Create ECS Service
      - name: Create ECS Service
        run: |
          aws ecs create-service \
            --cluster apache-web-cluster \
            --service-name apache-web-service \
            --task-definition static-html-task \
            --desired-count 1 \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-06d6437824c554b71],securityGroups=[sg-0d7c9a80b869b0b74],assignPublicIp=ENABLED}" \
            --region ap-south-1

      # Step 8: Deploy ECS Service (Rolling update)
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster apache-web-cluster \
            --service apache-web-service \
            --force-new-deployment \
            --region ap-south-1
