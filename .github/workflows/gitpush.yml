name: Deploy Static Website to ECS

on:
  push:
    branches:
      - main  # Adjust to your default branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI credentials
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-static-website .

      # Step 6: Tag Docker image
      - name: Tag Docker image
        run: |
          docker tag my-static-website:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/my-static-website:latest

      # Step 7: Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/my-static-website:latest

      # Step 8: Register a new ECS Task Definition
      - name: Register ECS Task Definition
        run: |
          aws ecs register-task-definition \
            --family apache-web-task \
            --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --cpu "256" \
            --memory "512" \
            --container-definitions '[
              {
                "name": "apache-container",
                "image": "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/my-static-website:latest",
                "portMappings": [
                  {
                    "containerPort": 80,
                    "protocol": "tcp"
                  }
                ]
              }
            ]' \
            --region ap-south-1

      # Step 9: Update ECS Service
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster apache-web-cluster-demo \
            --service apache-web-service-demo \
            --task-definition apache-web-task \
            --force-new-deployment \
            --region ap-south-1
